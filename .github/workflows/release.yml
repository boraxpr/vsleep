name: release-binaries

on:
  push:
    tags: ["v*"]
  workflow_dispatch: {} # let you trigger manually too

permissions:
  contents: write

defaults:
  run:
    shell: bash # <<< makes windows-latest use bash

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        py: ["3.12"]

    env:
      APP_NAME: vsleep
      ENTRYPOINT: main.py

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}

      - name: OS deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf build-essential

      - name: Install Python deps
        run: |
          python -m pip install -U pip wheel setuptools
          python -m pip install nuitka alive-progress

      - name: Compute artifact name
        id: names
        run: |
          case "${{ runner.os }}" in
            Linux)   SUFFIX="linux-amd64" && EXE="${APP_NAME}" ;;
            macOS)   SUFFIX="macos-arm64" && EXE="${APP_NAME}" ;;   # see note below
            Windows) SUFFIX="windows-amd64.exe" && EXE="${APP_NAME}.exe" ;;
          esac
          echo "SUFFIX=$SUFFIX" >> $GITHUB_OUTPUT
          echo "EXE=$EXE"       >> $GITHUB_OUTPUT

      - name: Build with Nuitka (onefile+standalone)
        run: |
          python -m nuitka "$ENTRYPOINT" \
            --onefile \
            --standalone \
            --include-package=alive_progress \
            --assume-yes-for-downloads \
            --output-filename="${{ steps.names.outputs.EXE }}"

      - name: Package artifact
        id: pkg
        run: |
          OUT="${APP_NAME}-${{ steps.names.outputs.SUFFIX }}"
          mkdir -p dist
          mv "${{ steps.names.outputs.EXE }}" "dist/${OUT}"
          if [ "${{ runner.os }}" != "Windows" ]; then chmod +x "dist/${OUT}"; fi
          echo "OUT=dist/${OUT}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.names.outputs.SUFFIX }}
          path: ${{ steps.pkg.outputs.OUT }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: release_assets
      - uses: softprops/action-gh-release@v2
        with:
          files: release_assets/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
